{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      selectedLanguage: \"c\",\n      editor: null\n    };\n  },\n  mounted() {\n    this.editor = ace.edit(this.$refs.editor);\n    this.editor.setTheme(\"ace/theme/monokai\");\n    this.editor.session.setMode(\"ace/mode/c_cpp\");\n  },\n  methods: {\n    changeLanguage() {\n      const language = this.selectedLanguage;\n      if (language === \"c\" || language === \"cpp\") {\n        this.editor.session.setMode(\"ace/mode/c_cpp\");\n      } else if (language === \"php\") {\n        this.editor.session.setMode(\"ace/mode/php\");\n      } else if (language === \"python\") {\n        this.editor.session.setMode(\"ace/mode/python\");\n      } else if (language === \"node\") {\n        this.editor.session.setMode(\"ace/mode/javascript\");\n      }\n    },\n    executeCode() {\n      const language = this.selectedLanguage;\n      const code = this.editor.getSession().getValue();\n      axios.post(\"/ide/app/compiler\", {\n        language,\n        code\n      }).then(response => {\n        this.$refs.output.textContent = response.data;\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedLanguage","editor","mounted","ace","edit","$refs","setTheme","session","setMode","methods","changeLanguage","language","executeCode","code","getSession","getValue","post","then","response","output","textContent","catch","error","console"],"sources":["C:\\GitHub\\baru1\\Web-DJKI\\studynet_django\\studynet_vue\\src\\views\\Editor.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"header\">Coba IDE</div>\r\n      <div class=\"control-panel\">\r\n        Select Language:\r\n        &nbsp; &nbsp;\r\n        <select v-model=\"selectedLanguage\" class=\"languages\" title=\"Change language\" @change=\"changeLanguage\">\r\n          <option value=\"c\">C</option>\r\n          <option value=\"cpp\">C++</option>\r\n          <option value=\"php\">PHP</option>\r\n          <option value=\"python\">Python</option>\r\n          <option value=\"node\">Node JS</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"editor-container\">\r\n          <div class=\"editor\" id=\"editor\" ref=\"editor\"></div>\r\n          <div class=\"button-container\">\r\n            <button class=\"btn\" @click=\"executeCode\">Run</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"output-container\">\r\n          <pre class=\"output ace_dark ace_monokai ace_hidpi ace_editor ace_focus\" ref=\"output\"></pre>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedLanguage: \"c\",\r\n        editor: null\r\n      };\r\n    },\r\n    mounted() {\r\n      this.editor = ace.edit(this.$refs.editor);\r\n      this.editor.setTheme(\"ace/theme/monokai\");\r\n      this.editor.session.setMode(\"ace/mode/c_cpp\");\r\n    },\r\n    methods: {\r\n      changeLanguage() {\r\n        const language = this.selectedLanguage;\r\n        if (language === \"c\" || language === \"cpp\") {\r\n          this.editor.session.setMode(\"ace/mode/c_cpp\");\r\n        } else if (language === \"php\") {\r\n          this.editor.session.setMode(\"ace/mode/php\");\r\n        } else if (language === \"python\") {\r\n          this.editor.session.setMode(\"ace/mode/python\");\r\n        } else if (language === \"node\") {\r\n          this.editor.session.setMode(\"ace/mode/javascript\");\r\n        }\r\n      },\r\n      executeCode() {\r\n        const language = this.selectedLanguage;\r\n        const code = this.editor.getSession().getValue();\r\n  \r\n        axios\r\n          .post(\"/ide/app/compiler\", { language, code })\r\n          .then(response => {\r\n            this.$refs.output.textContent = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"AA6BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,GAAG;MACrBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,MAAK,GAAIE,GAAG,CAACC,IAAI,CAAC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;IACzC,IAAI,CAACA,MAAM,CAACK,QAAQ,CAAC,mBAAmB,CAAC;IACzC,IAAI,CAACL,MAAM,CAACM,OAAO,CAACC,OAAO,CAAC,gBAAgB,CAAC;EAC/C,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,MAAMC,QAAO,GAAI,IAAI,CAACX,gBAAgB;MACtC,IAAIW,QAAO,KAAM,GAAE,IAAKA,QAAO,KAAM,KAAK,EAAE;QAC1C,IAAI,CAACV,MAAM,CAACM,OAAO,CAACC,OAAO,CAAC,gBAAgB,CAAC;MAC/C,OAAO,IAAIG,QAAO,KAAM,KAAK,EAAE;QAC7B,IAAI,CAACV,MAAM,CAACM,OAAO,CAACC,OAAO,CAAC,cAAc,CAAC;MAC7C,OAAO,IAAIG,QAAO,KAAM,QAAQ,EAAE;QAChC,IAAI,CAACV,MAAM,CAACM,OAAO,CAACC,OAAO,CAAC,iBAAiB,CAAC;MAChD,OAAO,IAAIG,QAAO,KAAM,MAAM,EAAE;QAC9B,IAAI,CAACV,MAAM,CAACM,OAAO,CAACC,OAAO,CAAC,qBAAqB,CAAC;MACpD;IACF,CAAC;IACDI,WAAWA,CAAA,EAAG;MACZ,MAAMD,QAAO,GAAI,IAAI,CAACX,gBAAgB;MACtC,MAAMa,IAAG,GAAI,IAAI,CAACZ,MAAM,CAACa,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAEhDjB,KAAI,CACDkB,IAAI,CAAC,mBAAmB,EAAE;QAAEL,QAAQ;QAAEE;MAAK,CAAC,EAC5CI,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACb,KAAK,CAACc,MAAM,CAACC,WAAU,GAAIF,QAAQ,CAACnB,IAAI;MAC/C,CAAC,EACAsB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}