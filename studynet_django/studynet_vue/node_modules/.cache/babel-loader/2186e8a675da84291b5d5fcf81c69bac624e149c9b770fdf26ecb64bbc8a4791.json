{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      form: {\n        title: '',\n        short_description: '',\n        long_description: '',\n        categories: [],\n        status: '',\n        lessons: []\n      },\n      categories: []\n    };\n  },\n  mounted() {\n    this.getCategories();\n  },\n  methods: {\n    getCategories() {\n      console.log('getCategories');\n      axios.get('courses/get_categories/').then(response => {\n        console.log(response.data);\n        this.categories = response.data;\n      });\n    },\n    submitForm(status) {\n      console.log('submitForm');\n      console.log(this.form);\n      this.form.status = status;\n      axios.post('courses/create/', this.form).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log('error:', error);\n      });\n    },\n    addLesson() {\n      console.log('addLesson');\n      this.form.lessons.push({\n        title: '',\n        short_description: '',\n        long_description: ''\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","form","title","short_description","long_description","categories","status","lessons","mounted","getCategories","methods","console","log","get","then","response","submitForm","post","catch","error","addLesson","push"],"sources":["D:\\Kampus\\Project\\Web\\Web DJKI\\studynet_django\\studynet_vue\\src\\views\\dashboard\\CreateCourse.vue"],"sourcesContent":["<template>\n    <div class=\"about\">\n        <div class=\"hero is-info\">\n            <div class=\"hero-body has-text-centered\">\n                <h1 class=\"title\">Create course</h1>\n            </div>\n        </div>\n\n        <section class=\"section\">\n            <div class=\"mb-6 px-6 py-4 has-background-grey-lighter\">\n                <h2 class=\"subtitle\">Meta information</h2>\n\n                <div class=\"field\">\n                    <label>Title</label>\n                    <input type=\"text\" class=\"input\" v-model=\"form.title\">\n                </div>\n\n                <div class=\"field\">\n                    <label>Short description</label>\n                    <textarea class=\"textarea\" v-model=\"form.short_description\"></textarea>\n                </div>\n\n                <div class=\"field\">\n                    <label>Long description</label>\n                    <textarea class=\"textarea\" v-model=\"form.long_description\"></textarea>\n                </div>\n\n                <div class=\"field\">\n                    <div class=\"select is-multiple\">\n                        <select multiple size=\"10\" v-model=\"form.categories\">\n                            <option \n                                v-for=\"category in categories\"\n                                v-bind:key=\"category.id\"\n                                v-bind:value=\"category.id\"\n                            >\n                                {{ category.title }}\n                            </option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"mb-6 px-6 py-4 has-background-grey-lighter\">\n                <h2 class=\"subtitle\">Lessons</h2>\n\n                <div\n                    v-for=\"(lesson, index) in form.lessons\"\n                    v-bind:key=\"index\"\n                    class=\"mb-4\"\n                >\n                    <h3 class=\"subtitle is-size-6\">Lesson</h3>\n\n                    <div class=\"field\">\n                        <label>Title</label>\n                        <input \n                            type=\"text\" \n                            class=\"input\" \n                            v-model=\"lesson.title\"\n                            :name=\"`form.lessons[${index}][title]`\"\n                        >\n                    </div>\n\n                    <div class=\"field\">\n                        <label>Short description</label>\n                        <textarea class=\"textarea\" v-model=\"lesson.short_description\" :name=\"`form.lessons[${index}][short_description]`\"></textarea>\n                    </div>\n\n                    <div class=\"field\">\n                        <label>Long description</label>\n                        <textarea class=\"textarea\" v-model=\"lesson.long_description\" :name=\"`form.lessons[${index}][long_description]`\"></textarea>\n                    </div>\n\n                    <hr>\n                </div>\n\n                <button class=\"button is-primary\" @click=\"addLesson()\">Add lesson</button>\n            </div>\n\n            <div class=\"field buttons\">\n                <button class=\"button is-success\" @click=\"submitForm('draft')\">Save as draft</button>\n                <button class=\"button is-info\" @click=\"submitForm('review')\">Submit for review</button>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n    data() {\n        return {\n            form: {\n                title: '',\n                short_description: '',\n                long_description: '',\n                categories: [],\n                status: '',\n                lessons: []\n            },\n            categories: [],\n        }\n    },\n    mounted() {\n        this.getCategories()\n    },\n    methods: {\n        getCategories() {\n            console.log('getCategories')\n\n            axios\n                .get('courses/get_categories/')\n                .then(response => {\n                    console.log(response.data)\n\n                    this.categories = response.data\n                })\n        },\n        submitForm(status) {\n            console.log('submitForm')\n            console.log(this.form)\n\n            this.form.status = status\n\n            axios\n                .post('courses/create/', this.form)\n                .then(response => {\n                    console.log(response.data)\n                })\n                .catch(error => {\n                    console.log('error:', error)\n                })\n        },\n        addLesson() {\n            console.log('addLesson')\n\n            this.form.lessons.push({\n                title: '',\n                short_description: '',\n                long_description: ''\n            })\n        }\n    }\n}\n</script>\n\n<style scoped src=\"../assets/css/dashboard/CreateCourse.css\">\n</style>"],"mappings":";AAuFA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,KAAK,EAAE,EAAE;QACTC,iBAAiB,EAAE,EAAE;QACrBC,gBAAgB,EAAE,EAAE;QACpBC,UAAU,EAAE,EAAE;QACdC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE;MACb,CAAC;MACDF,UAAU,EAAE;IAChB;EACJ,CAAC;EACDG,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,aAAa,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACLD,aAAaA,CAAA,EAAG;MACZE,OAAO,CAACC,GAAG,CAAC,eAAe;MAE3Bb,KAAI,CACCc,GAAG,CAAC,yBAAyB,EAC7BC,IAAI,CAACC,QAAO,IAAK;QACdJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACf,IAAI;QAEzB,IAAI,CAACK,UAAS,GAAIU,QAAQ,CAACf,IAAG;MAClC,CAAC;IACT,CAAC;IACDgB,UAAUA,CAACV,MAAM,EAAE;MACfK,OAAO,CAACC,GAAG,CAAC,YAAY;MACxBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,IAAI;MAErB,IAAI,CAACA,IAAI,CAACK,MAAK,GAAIA,MAAK;MAExBP,KAAI,CACCkB,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAChB,IAAI,EACjCa,IAAI,CAACC,QAAO,IAAK;QACdJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACf,IAAI;MAC7B,CAAC,EACAkB,KAAK,CAACC,KAAI,IAAK;QACZR,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEO,KAAK;MAC/B,CAAC;IACT,CAAC;IACDC,SAASA,CAAA,EAAG;MACRT,OAAO,CAACC,GAAG,CAAC,WAAW;MAEvB,IAAI,CAACX,IAAI,CAACM,OAAO,CAACc,IAAI,CAAC;QACnBnB,KAAK,EAAE,EAAE;QACTC,iBAAiB,EAAE,EAAE;QACrBC,gBAAgB,EAAE;MACtB,CAAC;IACL;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}