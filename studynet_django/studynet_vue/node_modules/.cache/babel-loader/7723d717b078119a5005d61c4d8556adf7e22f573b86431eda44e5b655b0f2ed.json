{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport CourseComment from '@/components/CourseComment';\nimport AddComment from '@/components/AddComment';\nimport Quiz from '@/components/Quiz';\nimport Video from '@/components/Video';\nexport default {\n  components: {\n    CourseComment,\n    AddComment,\n    Quiz,\n    Video\n  },\n  data() {\n    return {\n      course: {\n        created_by: {\n          id: 0\n        }\n      },\n      lessons: [],\n      comments: [],\n      activeLesson: null,\n      errors: [],\n      quiz: {},\n      activity: {}\n    };\n  },\n  async mounted() {\n    console.log('mounted');\n    const slug = this.$route.params.slug;\n    await axios.get(`courses/${slug}/`).then(response => {\n      console.log(response.data);\n      this.course = response.data.course;\n      this.lessons = response.data.lessons;\n    });\n    document.title = this.course.title + ' | StudyNet';\n  },\n  methods: {\n    submitComment(comment) {\n      this.comments.push(comment);\n    },\n    setActiveLesson(lesson) {\n      this.activeLesson = lesson;\n      if (lesson.lesson_type === 'quiz') {\n        this.getQuiz();\n      } else {\n        this.getComments();\n      }\n      this.trackStarted();\n    },\n    trackStarted() {\n      axios.post(`activities/track_started/${this.$route.params.slug}/${this.activeLesson.slug}/`).then(response => {\n        console.log(response.data);\n        this.activity = response.data;\n      });\n    },\n    markAsDone() {\n      axios.post(`activities/mark_as_done/${this.$route.params.slug}/${this.activeLesson.slug}/`).then(response => {\n        console.log(response.data);\n        this.activity = response.data;\n      });\n    },\n    getQuiz() {\n      axios.get(`courses/${this.course.slug}/${this.activeLesson.slug}/get-quiz/`).then(response => {\n        console.log(response.data);\n        this.quiz = response.data;\n      });\n    },\n    getComments() {\n      axios.get(`courses/${this.course.slug}/${this.activeLesson.slug}/get-comments/`).then(response => {\n        console.log(response.data);\n        this.comments = response.data;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","CourseComment","AddComment","Quiz","Video","components","data","course","created_by","id","lessons","comments","activeLesson","errors","quiz","activity","mounted","console","log","slug","$route","params","get","then","response","document","title","methods","submitComment","comment","push","setActiveLesson","lesson","lesson_type","getQuiz","getComments","trackStarted","post","markAsDone"],"sources":["D:\\Kampus\\Project\\Web\\Web DJKI\\studynet_django\\studynet_vue\\src\\views\\Course.vue"],"sourcesContent":["<template>\n    <div class=\"courses\">\n        <div class=\"hero is-info\">\n            <div class=\"hero-body has-text-centered\">\n                <h1 class=\"title\">{{ course.title }}</h1>\n\n                <router-link\n                    :to=\"{name: 'Author', params: {id: course.created_by.id }}\"\n                    class=\"subtitle\"\n                >\n                    By {{ course.created_by.first_name + ' ' + course.created_by.last_name }}\n                </router-link>\n            </div>\n        </div>\n\n        <section class=\"section\">\n            <div class=\"container\">\n                <div class=\"columns content\">\n                    <div class=\"column is-2\">\n                        <h2>Table of contents</h2>\n\n                        <ul>\n                            <li\n                                v-for=\"lesson in lessons\"\n                                v-bind:key=\"lesson.id\"\n                            >\n                                <a @click=\"setActiveLesson(lesson)\">{{ lesson.title }}</a>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div class=\"column is-10\">\n                        <template v-if=\"$store.state.user.isAuthenticated\">\n                            <template v-if=\"activeLesson\">\n                                <h2>{{ activeLesson.title }}</h2>\n\n                                <span class=\"tag is-warning\" v-if=\"activity.status == 'started'\" @click=\"markAsDone\">Started (mark as done)</span>\n                                <span class=\"tag is-success\" v-else>Done</span>\n\n                                <hr>\n                                \n                                {{ activeLesson.long_description }}\n\n                                <hr>\n\n                                <template v-if=\"activeLesson.lesson_type === 'quiz'\">\n                                    <Quiz\n                                        v-bind:quiz=\"quiz\"\n                                    />\n                                </template>\n\n                                <template v-if=\"activeLesson.lesson_type === 'video'\">\n                                    <Video\n                                        v-bind:youtube_id=\"activeLesson.youtube_id\"\n                                    />\n                                </template>\n\n                                <template  v-if=\"activeLesson.lesson_type === 'article'\">\n                                    <CourseComment\n                                        v-for=\"comment in comments\"\n                                        v-bind:key=\"comment.id\"\n                                        v-bind:comment=\"comment\"\n                                    />\n\n                                    <AddComment\n                                        v-bind:course=\"course\"\n                                        v-bind:activeLesson=\"activeLesson\"\n                                        v-on:submitComment=\"submitComment\"\n                                    />\n                                </template>\n                            </template>\n\n                            <template v-else>\n                                {{ course.long_description }}\n                            </template>\n                        </template>\n\n                        <template v-else>\n                            <h2>Restricted access</h2>\n                            \n                            <p>You need to have an account to continue!</p>\n                        </template>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nimport CourseComment from '@/components/CourseComment'\nimport AddComment from '@/components/AddComment'\nimport Quiz from '@/components/Quiz'\nimport Video from '@/components/Video'\n\nexport default {\n    components: {\n        CourseComment,\n        AddComment,\n        Quiz,\n        Video\n    },\n    data() {\n        return {\n            course: {\n                created_by: {\n                    id: 0\n                }\n            },\n            lessons: [],\n            comments: [],\n            activeLesson: null,\n            errors: [],\n            quiz: {},\n            activity: {}\n        }\n    },\n    async mounted() {\n        console.log('mounted')\n\n        const slug = this.$route.params.slug\n\n        await axios\n            .get(`courses/${slug}/`)\n            .then(response => {\n                console.log(response.data)\n\n                this.course = response.data.course\n                this.lessons = response.data.lessons\n            })\n        \n        document.title = this.course.title + ' | StudyNet'\n    },\n    methods: {\n        submitComment(comment) {\n            this.comments.push(comment)\n        },\n        setActiveLesson(lesson) {\n            this.activeLesson = lesson\n\n            if (lesson.lesson_type === 'quiz') {\n                this.getQuiz()\n            } else {\n                this.getComments()\n            }\n\n            this.trackStarted()\n        },\n        trackStarted() {\n            axios\n                .post(`activities/track_started/${this.$route.params.slug}/${this.activeLesson.slug}/`)\n                .then(response => {\n                    console.log(response.data)\n\n                    this.activity = response.data\n                })\n        },\n        markAsDone() {\n            axios\n                .post(`activities/mark_as_done/${this.$route.params.slug}/${this.activeLesson.slug}/`)\n                .then(response => {\n                    console.log(response.data)\n\n                    this.activity = response.data\n                })\n        },\n        getQuiz() {\n            axios\n                .get(`courses/${this.course.slug}/${this.activeLesson.slug}/get-quiz/`)\n                .then(response => {\n                    console.log(response.data)\n\n                    this.quiz = response.data\n                })\n        },\n        getComments() {\n            axios\n                .get(`courses/${this.course.slug}/${this.activeLesson.slug}/get-comments/`)\n                .then(response => {\n                    console.log(response.data)\n\n                    this.comments = response.data\n                })\n        }\n    }\n}\n</script>\n\n<style scoped src=\"../assets/css/Course.css\">\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}